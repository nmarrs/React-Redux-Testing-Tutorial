// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly is admin view 1`] = `
<div
  className="App"
>
  <header
    className="App-header"
  >
    <h2>
      Replenisher Task Management 
      <img
        alt="logo"
        className="App-logo"
        src="logo.png"
      />
    </h2>
  </header>
  <div>
    <button
      className="btn btn-success float-right m-3"
      id="createTaskButton"
      onClick={[Function]}
    >
      <i
        className="fas fa-plus"
      />
       Add New Task
    </button>
    <button
      className="btn btn-primary float-right m-3"
      id="assignTasksToUserButton"
      onClick={[Function]}
    >
      <i
        className="fas fa-pen-square"
      />
       Assign Tasks to User
    </button>
    <button
      className="btn btn-info float-left m-3 viewButton"
      id="toggleIsAdminViewButton"
      onClick={[MockFunction]}
    >
      <i
        className="fas fa-user-ninja"
      />
       Switch to User View
    </button>
    <AdminView
      editTaskModalOpen={false}
      isAdminView={true}
      templateTasks={
        Array [
          Object {
            "completionTime": "",
            "currentStatus": "To Do",
            "endTime": "",
            "feedback": "",
            "id": 1,
            "notes": "Unload merchandise from the bay door. Driver usually comes by at 6 am sharp.",
            "priority": 3,
            "rankWeight": 150,
            "startTime": "",
            "timeEstimate": 2,
            "title": "Unload merchandise",
          },
          Object {
            "completionTime": "",
            "currentStatus": "To Do",
            "endTime": "",
            "feedback": "",
            "id": 2,
            "notes": "Take merchandise items and stock shelves with them. Be sure to place items in correct areas.",
            "priority": 1,
            "rankWeight": 10,
            "startTime": "",
            "timeEstimate": 10,
            "title": "Stock shelves with unpacked items",
          },
        ]
      }
      toggleEditTaskModal={[MockFunction]}
    />
  </div>
  <Modal
    animationDuration={500}
    blockScroll={true}
    center={false}
    classNames={Object {}}
    classes={
      Object {
        "closeButton": "styles_closeButton__20ID4",
        "closeIcon": "styles_closeIcon__1QwbI",
        "modal": "styles_modal__gNwvD",
        "overlay": "styles_overlay__CLSq-",
        "overlayCenter": "styles_overlayCenter__YHoO7",
        "transitionEnter": "styles_transitionEnter__3j_-a",
        "transitionEnterActive": "styles_transitionEnterActive___eQs7",
        "transitionExit": "styles_transitionExit__1KmEf",
        "transitionExitActive": "styles_transitionExitActive__1nQXw",
      }
    }
    closeIconSize={28}
    closeIconSvgPath={
      <path
        d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
      />
    }
    closeOnEsc={true}
    closeOnOverlayClick={true}
    onClose={[Function]}
    onEntered={null}
    onEscKeyDown={null}
    onExited={null}
    onOverlayClick={null}
    open={false}
    showCloseIcon={true}
    styles={Object {}}
  >
    <CreateTaskForm
      createTask={[MockFunction]}
      isAdminView={true}
      toggleCreateTaskModal={[MockFunction]}
    />
  </Modal>
  <Modal
    animationDuration={500}
    blockScroll={true}
    center={false}
    classNames={Object {}}
    classes={
      Object {
        "closeButton": "styles_closeButton__20ID4",
        "closeIcon": "styles_closeIcon__1QwbI",
        "modal": "styles_modal__gNwvD",
        "overlay": "styles_overlay__CLSq-",
        "overlayCenter": "styles_overlayCenter__YHoO7",
        "transitionEnter": "styles_transitionEnter__3j_-a",
        "transitionEnterActive": "styles_transitionEnterActive___eQs7",
        "transitionExit": "styles_transitionExit__1KmEf",
        "transitionExitActive": "styles_transitionExitActive__1nQXw",
      }
    }
    closeIconSize={28}
    closeIconSvgPath={
      <path
        d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
      />
    }
    closeOnEsc={true}
    closeOnOverlayClick={true}
    onClose={[Function]}
    onEntered={null}
    onEscKeyDown={null}
    onExited={null}
    onOverlayClick={null}
    open={false}
    showCloseIcon={true}
    styles={Object {}}
  >
    <EditTaskForm
      editTask={[MockFunction]}
      isAdminView={true}
      toggleEditTaskModal={[MockFunction]}
    />
  </Modal>
</div>
`;

exports[`App renders correctly not admin view 1`] = `
<div
  className="App"
>
  <header
    className="App-header"
  >
    <h2>
      Replenisher Task Management 
      <img
        alt="logo"
        className="App-logo"
        src="logo.png"
      />
    </h2>
  </header>
  <div>
    <button
      className="btn btn-success float-right m-3"
      id="createTaskButton"
      onClick={[Function]}
    >
      <i
        className="fas fa-plus"
      />
       Add New Task
    </button>
    <div />
    <button
      className="btn btn-info float-left m-3 viewButton"
      onClick={[MockFunction]}
    >
      <i
        className="fas fa-user-tie"
      />
       Switch to Admin View
    </button>
    <UserView
      editTaskModalOpen={false}
      finishedTasks={Array []}
      inProgressTasks={Array []}
      isAdminView={false}
      toDoTasks={Array []}
      toggleEditTaskModal={[MockFunction]}
    />
  </div>
  <Modal
    animationDuration={500}
    blockScroll={true}
    center={false}
    classNames={Object {}}
    classes={
      Object {
        "closeButton": "styles_closeButton__20ID4",
        "closeIcon": "styles_closeIcon__1QwbI",
        "modal": "styles_modal__gNwvD",
        "overlay": "styles_overlay__CLSq-",
        "overlayCenter": "styles_overlayCenter__YHoO7",
        "transitionEnter": "styles_transitionEnter__3j_-a",
        "transitionEnterActive": "styles_transitionEnterActive___eQs7",
        "transitionExit": "styles_transitionExit__1KmEf",
        "transitionExitActive": "styles_transitionExitActive__1nQXw",
      }
    }
    closeIconSize={28}
    closeIconSvgPath={
      <path
        d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
      />
    }
    closeOnEsc={true}
    closeOnOverlayClick={true}
    onClose={[Function]}
    onEntered={null}
    onEscKeyDown={null}
    onExited={null}
    onOverlayClick={null}
    open={false}
    showCloseIcon={true}
    styles={Object {}}
  >
    <CreateTaskForm
      createTask={[MockFunction]}
      isAdminView={false}
      toggleCreateTaskModal={[MockFunction]}
    />
  </Modal>
  <Modal
    animationDuration={500}
    blockScroll={true}
    center={false}
    classNames={Object {}}
    classes={
      Object {
        "closeButton": "styles_closeButton__20ID4",
        "closeIcon": "styles_closeIcon__1QwbI",
        "modal": "styles_modal__gNwvD",
        "overlay": "styles_overlay__CLSq-",
        "overlayCenter": "styles_overlayCenter__YHoO7",
        "transitionEnter": "styles_transitionEnter__3j_-a",
        "transitionEnterActive": "styles_transitionEnterActive___eQs7",
        "transitionExit": "styles_transitionExit__1KmEf",
        "transitionExitActive": "styles_transitionExitActive__1nQXw",
      }
    }
    closeIconSize={28}
    closeIconSvgPath={
      <path
        d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
      />
    }
    closeOnEsc={true}
    closeOnOverlayClick={true}
    onClose={[Function]}
    onEntered={null}
    onEscKeyDown={null}
    onExited={null}
    onOverlayClick={null}
    open={false}
    showCloseIcon={true}
    styles={Object {}}
  >
    <EditTaskForm
      editTask={[MockFunction]}
      isAdminView={false}
      toggleEditTaskModal={[MockFunction]}
    />
  </Modal>
</div>
`;

exports[`App renders correctly not admin view, sorts tasks correctly 1`] = `
<div
  className="App"
>
  <header
    className="App-header"
  >
    <h2>
      Replenisher Task Management 
      <img
        alt="logo"
        className="App-logo"
        src="logo.png"
      />
    </h2>
  </header>
  <div>
    <button
      className="btn btn-success float-right m-3"
      id="createTaskButton"
      onClick={[Function]}
    >
      <i
        className="fas fa-plus"
      />
       Add New Task
    </button>
    <div />
    <button
      className="btn btn-info float-left m-3 viewButton"
      onClick={[MockFunction]}
    >
      <i
        className="fas fa-user-tie"
      />
       Switch to Admin View
    </button>
    <UserView
      editTaskModalOpen={false}
      finishedTasks={
        Array [
          Object {
            "completionTime": "",
            "currentStatus": "Finished",
            "endTime": "",
            "feedback": "",
            "id": 3,
            "notes": "Take merchandise items and stock shelves with them. Be sure to place items in correct areas.",
            "priority": 5,
            "rankWeight": 250,
            "startTime": "",
            "timeEstimate": 2,
            "title": "Stock shelves with unpacked items",
          },
        ]
      }
      inProgressTasks={
        Array [
          Object {
            "completionTime": "",
            "currentStatus": "In Progress",
            "endTime": "",
            "feedback": "",
            "id": 2,
            "notes": "Take merchandise items and stock shelves with them. Be sure to place items in correct areas.",
            "priority": 1,
            "rankWeight": 10,
            "startTime": "",
            "timeEstimate": 10,
            "title": "Stock shelves with unpacked items",
          },
        ]
      }
      isAdminView={false}
      toDoTasks={
        Array [
          Object {
            "completionTime": "",
            "currentStatus": "To Do",
            "endTime": "",
            "feedback": "",
            "id": 1,
            "notes": "Unload merchandise from the bay door. Driver usually comes by at 6 am sharp.",
            "priority": 3,
            "rankWeight": 150,
            "startTime": "",
            "timeEstimate": 2,
            "title": "Unload merchandise",
          },
        ]
      }
      toggleEditTaskModal={[MockFunction]}
    />
  </div>
  <Modal
    animationDuration={500}
    blockScroll={true}
    center={false}
    classNames={Object {}}
    classes={
      Object {
        "closeButton": "styles_closeButton__20ID4",
        "closeIcon": "styles_closeIcon__1QwbI",
        "modal": "styles_modal__gNwvD",
        "overlay": "styles_overlay__CLSq-",
        "overlayCenter": "styles_overlayCenter__YHoO7",
        "transitionEnter": "styles_transitionEnter__3j_-a",
        "transitionEnterActive": "styles_transitionEnterActive___eQs7",
        "transitionExit": "styles_transitionExit__1KmEf",
        "transitionExitActive": "styles_transitionExitActive__1nQXw",
      }
    }
    closeIconSize={28}
    closeIconSvgPath={
      <path
        d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
      />
    }
    closeOnEsc={true}
    closeOnOverlayClick={true}
    onClose={[Function]}
    onEntered={null}
    onEscKeyDown={null}
    onExited={null}
    onOverlayClick={null}
    open={false}
    showCloseIcon={true}
    styles={Object {}}
  >
    <CreateTaskForm
      createTask={[MockFunction]}
      isAdminView={false}
      toggleCreateTaskModal={[MockFunction]}
    />
  </Modal>
  <Modal
    animationDuration={500}
    blockScroll={true}
    center={false}
    classNames={Object {}}
    classes={
      Object {
        "closeButton": "styles_closeButton__20ID4",
        "closeIcon": "styles_closeIcon__1QwbI",
        "modal": "styles_modal__gNwvD",
        "overlay": "styles_overlay__CLSq-",
        "overlayCenter": "styles_overlayCenter__YHoO7",
        "transitionEnter": "styles_transitionEnter__3j_-a",
        "transitionEnterActive": "styles_transitionEnterActive___eQs7",
        "transitionExit": "styles_transitionExit__1KmEf",
        "transitionExitActive": "styles_transitionExitActive__1nQXw",
      }
    }
    closeIconSize={28}
    closeIconSvgPath={
      <path
        d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
      />
    }
    closeOnEsc={true}
    closeOnOverlayClick={true}
    onClose={[Function]}
    onEntered={null}
    onEscKeyDown={null}
    onExited={null}
    onOverlayClick={null}
    open={false}
    showCloseIcon={true}
    styles={Object {}}
  >
    <EditTaskForm
      editTask={[MockFunction]}
      isAdminView={false}
      toggleEditTaskModal={[MockFunction]}
    />
  </Modal>
</div>
`;
